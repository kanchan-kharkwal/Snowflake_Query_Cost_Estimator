CREATE OR REPLACE TABLE AKASX.PUBLIC.query_texts (
    num NUMBER IDENTITY,
    query_id STRING,
    query_text TEXT
);

ALTER TABLE AKASX.PUBLIC.query_texts
ADD COLUMN active_flag NUMBER DEFAULT 0; --inactive flags 

UPDATE AKASX.PUBLIC.query_texts 
SET active_flag = 1;


select * from query_texts;

truncate table query_texts;

---------------- UPDATE QUERY ID -------------------
UPDATE AKASX.PUBLIC.query_texts tgt
SET tgt.query_id = src.query_id
FROM (
    SELECT row_number()over(partition by a.QUERY_TEXT order by a.START_TIME desc) AS rn,a.START_TIME AS D,a.*
        FROM TABLE(SNOWFLAKE.INFORMATION_SCHEMA.QUERY_HISTORY(DATEADD('HOUR', -4, CURRENT_TIMESTAMP()), CURRENT_TIMESTAMP))  as a
        JOIN AKASX.PUBLIC.query_texts as b
        on a.QUERY_TEXT=b.query_text
        WHERE execution_status = 'SUCCESS'
) src
WHERE src.query_text = tgt.query_text
AND rn =1;


UPDATE AKASX.PUBLIC.query_texts tgt
SET query_id = null;


----------- CALL QUERY IN PROCEDURE -------------------
UPDATE AKASX.PUBLIC.query_texts tgt
SET query_text = 'CALL AKASX.PUBLIC.top_supplier_revenue();'
WHERE num = 15;

----------PROCEDURE TO RUN QUERIES------------------------
 
CALL AKASX.PUBLIC.top_supplier_revenue();

CREATE OR REPLACE PROCEDURE AKASX.PUBLIC.top_supplier_revenue()
    RETURNS STRING
    LANGUAGE SQL
    EXECUTE AS CALLER
AS
$$
DECLARE
    RESULT STRING; 
BEGIN
    -- Create the temporary view revenue0
    CREATE OR REPLACE VIEW revenue0 AS
        SELECT  
            l_suppkey AS supplier_no,
            SUM(l_extendedprice * (1 - l_discount)) AS total_revenue
        FROM SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.lineitem 
        WHERE  
            l_shipdate >= DATE '1996-01-01'  
            AND l_shipdate < DATEADD(month, 3, DATE '1996-01-01') 
        GROUP BY l_suppkey;
    
    -- Query to find the supplier with the highest revenue
    SELECT  
        s_suppkey,  
        s_name,  
        s_address,  
        s_phone,  
        r.total_revenue 
    FROM  
        SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.supplier AS s
    JOIN revenue0 AS r
        ON s.s_suppkey = r.supplier_no
    WHERE  
        r.total_revenue = ( 
            SELECT MAX(total_revenue) 
            FROM revenue0
        )
    ORDER BY s.s_suppkey;

    -- Drop the temporary view revenue0
    DROP VIEW IF EXISTS revenue0;

    SET RESULT := 'Procedure executed successfully';
    
    RETURN RESULT;
END;
$$;



-- INSERT ALL THE QUERIES
INSERT INTO query_texts (query_text)
VALUES
( 'select 
        l_returnflag,  
        l_linestatus,  
        sum(l_quantity) as sum_qty, 
        sum(l_extendedprice) as sum_base_price, 
        sum(l_extendedprice*(1-l_discount)) as sum_disc_price, 
        sum(l_extendedprice*(1-l_discount)*(1+l_tax)) as sum_charge, 
        avg(l_quantity) as avg_qty,  
        avg(l_extendedprice) as avg_price, 
        avg(l_discount) as avg_disc,  
        count(*) as count_order 
    from  SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.lineitem 
    where  
        l_shipdate <= DATEADD(day, -90, DATE \'1998-12-01\') --snowflake handles precision 
    group by  l_returnflag,  l_linestatus 
    order by  l_returnflag, l_linestatus;') 
    ,
( 'select s_acctbal, s_name, n_name, p_partkey, p_mfgr, s_address, s_phone, s_comment 
                from SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.part, SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.supplier, 
                SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.partsupp, SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.nation, 
                SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.region 
                where p_partkey = ps_partkey and s_suppkey = ps_suppkey 
                and p_size = 15 and p_type like ''%BRASS'' 
                and s_nationkey = n_nationkey and n_regionkey = r_regionkey 
                and r_name = ''EUROPE'' 
                and ps_supplycost = ( 
                    select min(ps_supplycost) 
                    from SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.partsupp, 
                    SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.supplier, SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.nation, 
                    SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.region 
                    where p_partkey = ps_partkey and s_suppkey = ps_suppkey 
                    and s_nationkey = n_nationkey and n_regionkey = r_regionkey 
                    and r_name = ''EUROPE'' 
                ) 
                order by s_acctbal desc, n_name, s_name, p_partkey;')
                ,
    ('select l_orderkey, sum(l_extendedprice*(1-l_discount)) as revenue, 
                o_orderdate, o_shippriority 
                from SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.customer, SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.orders, 
                SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.lineitem 
                where c_mktsegment = ''BUILDING'' 
                and c_custkey = o_custkey and l_orderkey = o_orderkey 
                and o_orderdate < date ''1995-03-15'' 
                and l_shipdate > date ''1995-03-15'' 
                group by l_orderkey, o_orderdate, o_shippriority 
                order by revenue desc, o_orderdate;'),




( 'select  
        o_orderpriority,  
        count(*) as order_count 
    from  SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.orders 
    where  
        o_orderdate >= date \'1993-07-01\'  
        and o_orderdate < DATEADD(month, 3, DATE \'1993-07-01\')   
        and exists ( 
            select * 
            from SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.lineitem 
            where l_orderkey = o_orderkey  
            and l_commitdate < l_receiptdate 
        ) 
    group by  o_orderpriority 
    order by  o_orderpriority;')
    ,
    ('select  
        n_name,  
        sum(l_extendedprice * (1 - l_discount)) as revenue 
    from  
        SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.customer,  
        SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.orders,  
        SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.lineitem,  
        SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.supplier,  
        SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.nation,  
        SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.region 
    where  
        c_custkey = o_custkey  
        and l_orderkey = o_orderkey  
        and l_suppkey = s_suppkey  
        and c_nationkey = s_nationkey  
        and s_nationkey = n_nationkey  
        and n_regionkey = r_regionkey  
        and r_name = \'ASIA\'  
        and o_orderdate >= date \'1994-01-01\'  
        and o_orderdate < DATEADD(year, 1, DATE \'1994-01-01\')  group by  
        n_name 
    order by revenue desc;'),
    ('
    select  
        sum(l_extendedprice * l_discount) as revenue 
    from SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.lineitem 
    where  
        l_shipdate >= date \'1994-01-01\'  
        and l_shipdate < DATEADD(year, 1, DATE \'1994-01-01\')
        and l_discount between 0.06 - 0.01 and 0.06 + 0.01 
        and l_quantity < 24;')
    ,
    
    ('select  
        supp_nation,  
        cust_nation,  
        l_year,  
        sum(volume) as revenue 
    from ( 
        select  
            n1.n_name as supp_nation,  
            n2.n_name as cust_nation,  
            extract(year from l_shipdate) as l_year,  
            l_extendedprice * (1 - l_discount) as volume 
        from  
            SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.supplier,  
            SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.lineitem,  
            SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.orders,  
            SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.customer,  
            SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.nation n1,  
            SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.nation n2 
        where  
            s_suppkey = l_suppkey  
            and o_orderkey = l_orderkey  
            and c_custkey = o_custkey  
            and s_nationkey = n1.n_nationkey  
            and c_nationkey = n2.n_nationkey  
            and ( 
                (n1.n_name = \'FRANCE\' and n2.n_name = \'GERMANY\')  
                or (n1.n_name = \'GERMANY\' and n2.n_name = \'FRANCE\') 
            ) 
            and l_shipdate between date \'1995-01-01\'  and DATEADD(year, 1, DATE \'1996-12-31\')
    ) as shipping 
    group by  
        supp_nation,  
        cust_nation,  
        l_year 
    order by  
        supp_nation,  
        cust_nation,  
        l_year;')
    ,
    
    ('select  
        o_year,  
        sum(case  
            when nation = \'BRAZIL\' then volume  
            else 0  
        end) / sum(volume) as mkt_share 
    from ( 
        select  
            extract(year from o_orderdate) as o_year,  
            l_extendedprice * (1 - l_discount) as volume,  
            n2.n_name as nation 
        from  
            SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.part,  
            SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.supplier,  
            SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.lineitem,  
            SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.orders,  
            SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.customer,  
            SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.nation n1,  
            SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.nation n2,  
            SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.region 
        where  
            p_partkey = l_partkey  
            and s_suppkey = l_suppkey  
            and l_orderkey = o_orderkey  
            and o_custkey = c_custkey  
            and c_nationkey = n1.n_nationkey  
            and n1.n_regionkey = r_regionkey  
            and r_name = \'AMERICA\'  
            and s_nationkey = n2.n_nationkey  
            and o_orderdate between date \'1995-01-01\'  and DATEADD(year, 1, DATE \'1996-12-31\') 
            and p_type = \'ECONOMY ANODIZED STEEL\' 
        ) as all_nations 
    group by o_year 
    order by o_year;')
    ,
    
    ('select  
        nation,  
        o_year,  
        sum(amount) as sum_profit 
    from ( 
        select  
            n_name as nation,  
            extract(year from o_orderdate) as o_year,  
            l_extendedprice * (1 - l_discount) - ps_supplycost * l_quantity as amount 
        from  
            SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.part,  
            SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.supplier,  
            SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.lineitem,  
            SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.partsupp,  
            SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.orders,  
            SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.nation 
        where  
            s_suppkey = l_suppkey  
            and ps_suppkey = l_suppkey  
            and ps_partkey = l_partkey  
            and p_partkey = l_partkey  
            and o_orderkey = l_orderkey  
            and s_nationkey = n_nationkey  
            and p_name like \'%green\' 
    ) as profit 
    group by  
        nation,  
        o_year 
    order by  
        nation,  
        o_year;')
    ,
    
    
   ( 'select  
        c_custkey,  
        c_name,  
        sum(l_extendedprice * (1 - l_discount)) as revenue,  
        c_acctbal,  
        n_name,  
        c_address,  
        c_phone,  
        c_comment 
    from  
        SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.customer,  
        SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.orders,  
        SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.lineitem,  
        SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.nation 
    where  
        c_custkey = o_custkey  
        and l_orderkey = o_orderkey  
        and o_orderdate >= date \'1993-10-01\'  
        and o_orderdate < DATEADD(month, 3, DATE \'1993-10-01\')
        and l_returnflag = \'R\'  
        and c_nationkey = n_nationkey 
    group by  
        c_custkey,  
        c_name,  
        c_acctbal,  
        c_phone,  
        n_name,  
        c_address,  
        c_comment 
    order by revenue desc 
    limit 20;')
    ,
    
    ('select  
        ps_partkey,  
        sum(ps_supplycost * ps_availqty) as value 
    from  
        SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.partsupp,  
        SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.supplier,  
        SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.nation 
    where  
        ps_suppkey = s_suppkey  
        and s_nationkey = n_nationkey  
        and n_name = \'GERMANY\' 
    group by  ps_partkey  
    having  
        sum(ps_supplycost * ps_availqty) > ( 
            select  
                sum(ps_supplycost * ps_availqty) * 0.0001 
            from  
                SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.partsupp,  
                SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.supplier,  
                SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.nation 
            where  
                ps_suppkey = s_suppkey  
                and s_nationkey = n_nationkey  
                and n_name = \'GERMANY\' 
        ) 
    order by value desc;')
    ,
    
    
    ('select  
        l_shipmode,  
        sum(case  
            when o_orderpriority = \'1-URGENT\'  
              or o_orderpriority = \'2-HIGH\'  
            then 1  
            else 0  
        end) as high_line_count,  
        sum(case  
            when o_orderpriority <> \'1-URGENT\'  
              and o_orderpriority <> \'2-HIGH\'  
            then 1  
            else 0  
        end) as low_line_count 
    from  
        SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.orders,  
        SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.lineitem 
    where  
        o_orderkey = l_orderkey  
        and l_shipmode in (\'MAIL\', \'SHIP\')  
        and l_commitdate < l_receiptdate  
        and l_shipdate < l_commitdate  
        and l_receiptdate >= date \'1994-01-01\'  
        and l_receiptdate < DATEADD(year, 1, DATE \'1994-01-01\')
    group by   l_shipmode 
    order by     l_shipmode;')
    ,
    
    ('select  
        c_count,  
        count(*) as custdist 
    from ( 
        select  
            c_custkey,  
            count(o_orderkey) as c_count 
        from  
            SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.customer 
        left outer join SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.orders on  
                c_custkey = o_custkey  
                and o_comment not like \'%special%requests%\' 
        group by  c_custkey 
    ) as c_orders 
    group by  c_count 
    order by  
        custdist desc,  
        c_count desc;')
    
    ,
   ( 'select  
        100.00 * sum(case  
            when p_type like \'PROMO%\'  
            then l_extendedprice * (1 - l_discount)  
            else 0  
        end) / sum(l_extendedprice * (1 - l_discount)) as promo_revenue 
    from  
        SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.lineitem,  
        SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.part 
    where  
        l_partkey = p_partkey  
        and l_shipdate >= date \'1995-09-01\'  
        and l_shipdate < DATEADD(month, 1, DATE \'1995-09-01\');')
    ,
    
    ('create view revenue0 (supplier_no, total_revenue) as 
        select  
            l_suppkey,  
            sum(l_extendedprice * (1 - l_discount)) 
        from SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.lineitem 
        where  
            l_shipdate >= date \'1996-01-01\'  
            and l_shipdate < DATEADD(month, 3, DATE \'1996-01-01\') 
        group by   l_suppkey;
    
    select  
        s_suppkey,  
        s_name,  
        s_address,  
        s_phone,  
        total_revenue 
    from  
        SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.supplier,  
        revenue0 
    where  
        s_suppkey = supplier_no  
        and total_revenue = ( 
            select  max(total_revenue) 
            from   revenue0 
        ) 
    order by   s_suppkey;
    
    drop view if exists revenue0;')
,    

  ( ' select  
        p_brand,  
        p_type,  
        p_size,  
        count(distinct ps_suppkey) as supplier_cnt 
    from  
        SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.partsupp,  
        SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.part 
    where  
        p_partkey = ps_partkey  
        and p_brand <> \'BRAND#45\'  
        and p_type not like \'MEDIUM POLISHED%\'  
        and p_size in (49, 14, 23, 45, 19, 3, 36, 9)  
        and ps_suppkey not in ( 
            select  
                s_suppkey 
            from   SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.supplier 
            where  
                s_comment like \'%Customer%Complaints%\' 
        ) 
    group by  
        p_brand,  
        p_type,  
        p_size 
    order by  
        supplier_cnt desc,  
        p_brand,  
        p_type,  
        p_size;')
    
    
    ,
   ( 'select  
        sum(l_extendedprice) / 7.0 as avg_yearly 
    from  
        SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.lineitem,  
        SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.part 
    where  
        p_partkey = l_partkey  
        and p_brand = \'Brand#23\'  
        and p_container = \'MED BOX\'  
        and l_quantity < ( 
            select  
                0.2 * avg(l_quantity) 
            from   SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.lineitem 
            where    l_partkey = p_partkey 
        );')
    ,
    
    ('select  
        c_name,  
        c_custkey,  
        o_orderkey,  
        o_orderdate,  
        o_totalprice,  
        sum(l_quantity) 
    from  
        SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.customer,  
        SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.orders,  
        SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.lineitem 
    where  
        o_orderkey in ( 
            select  
                l_orderkey 
            from  SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.lineitem 
            group by   l_orderkey  
            having  
                sum(l_quantity) > 300
        ) 
        and c_custkey = o_custkey  
        and o_orderkey = l_orderkey 
    group by  
        c_name,  
        c_custkey,  
        o_orderkey,  
        o_orderdate,  
        o_totalprice 
    order by  
        o_totalprice desc,  
        o_orderdate 
    limit 100;')
    
    ,
   ( 'select  
        sum(l_extendedprice * (1 - l_discount)) as revenue 
    from  
        SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.lineitem,  
        SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.part 
    where  
        ( 
            p_partkey = l_partkey  
            and p_brand = \'Brand#12\'  
            and p_container in (\'SM CASE\', \'SM BOX\', \'SM PACK\', \'SM PKG\')  
            and l_quantity >= 1 and l_quantity <= 11  
            and p_size between 1 and 5  
            and l_shipmode in (\'AIR\', \'AIR REG\')  
            and l_shipinstruct = \'DELIVER IN PERSON\' 
        )  
        or 
        ( 
            p_partkey = l_partkey  
            and p_brand = \'Brand#23\'  
            and p_container in (\'MED BAG\', \'MED BOX\', \'MED PKG\', \'MED PACK\')  
            and l_quantity >= 10 and l_quantity <= 20  
            and p_size between 1 and 10  
            and l_shipmode in (\'AIR\', \'AIR REG\')  
            and l_shipinstruct = \'DELIVER IN PERSON\' 
        )  
        or 
        ( 
            p_partkey = l_partkey  
            and p_brand = \'Brand#34\'  
            and p_container in (\'LG CASE\', \'LG BOX\', \'LG PACK\', \'LG PKG\')  
            and l_quantity >= 20 and l_quantity <= 30  
            and p_size between 1 and 15  
            and l_shipmode in (\'AIR\', \'AIR REG\')  
            and l_shipinstruct = \'DELIVER IN PERSON\' 
        );')
    ,
   ( 'select  
        s_name,  
        s_address 
    from  
        SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.supplier,  
        SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.nation 
    where  
        s_suppkey in ( 
            select  
                ps_suppkey 
            from   SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.partsupp 
            where  
                ps_partkey in (
                    select p_partkey
                    from SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.part
                    where p_name like \'forest%\'
                )
                and ps_availqty > ( 
                    select  
                        0.5 * sum(l_quantity) 
                    from   SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.lineitem 
                    where  
                        l_partkey = ps_partkey  
                        and l_suppkey = ps_suppkey  
                        and l_shipdate >= date \'1994-01-01\'  
                        and l_shipdate < DATEADD(year, 1, DATE \'1994-01-01\')
                ) 
        ) 
        and s_nationkey = n_nationkey  
        and n_name = \'CANADA\' 
    order by   s_name;')
    
   ,
   ( 'select  
        s_name,  
        count(*) as numwait 
    from  
        SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.supplier,  
        SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.lineitem l1,  
        SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.orders,  
        SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.nation 
    where  
        s_suppkey = l1.l_suppkey  
        and o_orderkey = l1.l_orderkey  
        and o_orderstatus = \'F\'  
        and l1.l_receiptdate > l1.l_commitdate  
        and exists ( 
            select * 
            from SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.lineitem l2 
            where l2.l_orderkey = l1.l_orderkey  
            and l2.l_suppkey <> l1.l_suppkey 
        )  
        and not exists ( 
            select * 
            from SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.lineitem l3 
            where l3.l_orderkey = l1.l_orderkey  
            and l3.l_suppkey <> l1.l_suppkey  
            and l3.l_receiptdate > l3.l_commitdate 
        )  
        and s_nationkey = n_nationkey  
        and n_name = \'SAUDI ARABIA\' 
    group by    s_name 
    order by  
        numwait desc,  
        s_name 
    limit 100;')
    ,
    
    ('select  
        cntrycode,  
        count(*) as numcust,  
        sum(c_acctbal) as totacctbal 
    from ( 
        select  
            -- substring(c_phone from 1 for 2) 
            SUBSTR(c_phone, 1, 2) as cntrycode,  
            c_acctbal 
        from    SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.customer 
        where  
            SUBSTR(c_phone, 1, 2) in  
                (\'13\',\'31\',\'23\',\'29\',\'30\',\'18\',\'17\')  
            and c_acctbal > ( 
                select  
                    avg(c_acctbal) 
                from   SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.customer 
                where  
                    c_acctbal > 0.00  
                    and SUBSTR(c_phone, 1, 2) in  
                        (\'13\',\'31\',\'23\',\'29\',\'30\',\'18\',\'17\') 
            )  
            and not exists ( 
                select * 
                from SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.orders 
                where o_custkey = c_custkey 
            ) 
    ) as custsale 
    group by cntrycode 
    order by  cntrycode;'
    );
